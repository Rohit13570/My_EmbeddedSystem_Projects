

HI-TECH Software LITE Macro Assembler (PIC18) V9.63PL3 build 4692 
                                                       Sat Oct 17 20:41:06 2020

HI-TECH Software Omniscient Code Generator build 4692
     1  000000                     opt subtitle "HI-TECH Software Omniscient Code G
                                 enerator build 4692"
     2                           
     3                           	processor	18F4580
     4  000000                     porta	equ	0F80h
     5  000000                     portb	equ	0F81h
     6  000000                     portc	equ	0F82h
     7  000000                     portd	equ	0F83h
     8  000000                     porte	equ	0F84h
     9  000000                     lata	equ	0F89h
    10  000000                     latb	equ	0F8Ah
    11  000000                     latc	equ	0F8Bh
    12  000000                     latd	equ	0F8Ch
    13  000000                     late	equ	0F8Dh
    14  000000                     trisa	equ	0F92h
    15  000000                     trisb	equ	0F93h
    16  000000                     trisc	equ	0F94h
    17  000000                     trisd	equ	0F95h
    18  000000                     trise	equ	0F96h
    19  000000                     pie1	equ	0F9Dh
    20  000000                     pir1	equ	0F9Eh
    21  000000                     ipr1	equ	0F9Fh
    22  000000                     pie2	equ	0FA0h
    23  000000                     pir2	equ	0FA1h
    24  000000                     ipr2	equ	0FA2h
    25  000000                     t3con	equ	0FB1h
    26  000000                     tmr3l	equ	0FB2h
    27  000000                     tmr3h	equ	0FB3h
    28  000000                     ccp1con	equ	0FBDh
    29  000000                     ccpr1l	equ	0FBEh
    30  000000                     ccpr1h	equ	0FBFh
    31  000000                     adcon1	equ	0FC1h
    32  000000                     adcon0	equ	0FC2h
    33  000000                     adresl	equ	0FC3h
    34  000000                     adresh	equ	0FC4h
    35  000000                     sspcon2	equ	0FC5h
    36  000000                     sspcon1	equ	0FC6h
    37  000000                     sspstat	equ	0FC7h
    38  000000                     sspadd	equ	0FC8h
    39  000000                     sspbuf	equ	0FC9h
    40  000000                     t2con	equ	0FCAh
    41  000000                     pr2	equ	0FCBh
    42  000000                     tmr2	equ	0FCCh
    43  000000                     t1con	equ	0FCDh
    44  000000                     tmr1l	equ	0FCEh
    45  000000                     tmr1h	equ	0FCFh
    46  000000                     rcon	equ	0FD0h
    47  000000                     wdtcon	equ	0FD1h
    48  000000                     lvdcon	equ	0FD2h
    49  000000                     osccon	equ	0FD3h
    50  000000                     t0con	equ	0FD5h
    51  000000                     tmr0l	equ	0FD6h
    52  000000                     tmr0h	equ	0FD7h
    53  000000                     status	equ	0FD8h
    54  000000                     fsr2	equ	0FD9h
    55  000000                     fsr2l	equ	0FD9h
    56  000000                     fsr2h	equ	0FDAh
    57  000000                     plusw2	equ	0FDBh
    58  000000                     preinc2	equ	0FDCh
    59  000000                     postdec2	equ	0FDDh
    60  000000                     postinc2	equ	0FDEh
    61  000000                     indf2	equ	0FDFh
    62  000000                     bsr	equ	0FE0h
    63  000000                     fsr1	equ	0FE1h
    64  000000                     fsr1l	equ	0FE1h
    65  000000                     fsr1h	equ	0FE2h
    66  000000                     plusw1	equ	0FE3h
    67  000000                     preinc1	equ	0FE4h
    68  000000                     postdec1	equ	0FE5h
    69  000000                     postinc1	equ	0FE6h
    70  000000                     indf1	equ	0FE7h
    71  000000                     wreg	equ	0FE8h
    72  000000                     fsr0	equ	0FE9h
    73  000000                     fsr0l	equ	0FE9h
    74  000000                     fsr0h	equ	0FEAh
    75  000000                     plusw0	equ	0FEBh
    76  000000                     preinc0	equ	0FECh
    77  000000                     postdec0	equ	0FEDh
    78  000000                     postinc0	equ	0FEEh
    79  000000                     indf0	equ	0FEFh
    80  000000                     intcon3	equ	0FF0h
    81  000000                     intcon2	equ	0FF1h
    82  000000                     intcon	equ	0FF2h
    83  000000                     prod	equ	0FF3h
    84  000000                     prodl	equ	0FF3h
    85  000000                     prodh	equ	0FF4h
    86  000000                     tablat	equ	0FF5h
    87  000000                     tblptr	equ	0FF6h
    88  000000                     tblptrl	equ	0FF6h
    89  000000                     tblptrh	equ	0FF7h
    90  000000                     tblptru	equ	0FF8h
    91  000000                     pcl	equ	0FF9h
    92  000000                     pclat	equ	0FFAh
    93  000000                     pclath	equ	0FFAh
    94  000000                     pclatu	equ	0FFBh
    95  000000                     stkptr	equ	0FFCh
    96  000000                     tosl	equ	0FFDh
    97  000000                     tosh	equ	0FFEh
    98  000000                     tosu	equ	0FFFh
    99                           	global	__ramtop
   100                           	global	__accesstop
   101                           	GLOBAL	__activetblptr
   102  000000                     __activetblptr	EQU	0
   103                           	GLOBAL	__smallconst,__Lsmallconst
   104  000000                     __smallconst	EQU	__Lsmallconst
   105                           	GLOBAL	__mediumconst,__Lmediumconst
   106  000000                     __mediumconst	EQU	__Lmediumconst
   107                           	GLOBAL	__Ldata
   108  000000                     __Ldata	EQU	0
   109  000000                     delay@i	equ	??_delay+0
   110+                          	global	delay@i
   111+ 000000                     delay@j	equ	??_delay+2
   112+                          	global	delay@j
   113+                          ;Data sizes: Strings 0, constant 0, data 0, bss 
      +                          0, persistent 0 stack 4
   114+                          	global	_main
   115+                          	global	??_main
   116+                          	global	?_main
   117+                                  psect   text0,class=CODE,space=0,reloc=2
   118+                          
   119+                          	opt lm
   120+                          	file	"C:\Users\rohit\Documents\pic program\pic3
      +                          .c"
   121+                          	line	4
   122+ 000000                     	__size_of_main	equ	__end_of_main-_main
   123                           ;18f4580.h: 24: typedef union {
   124                           ;18f4580.h: 25: struct {
   125                           ;18f4580.h: 26: unsigned volatile STKPTR:5;
   126                           ;18f4580.h: 27: unsigned :1;
   127                           ;18f4580.h: 28: unsigned volatile STKUNF:1;
   128                           ;18f4580.h: 29: unsigned volatile STKFUL:1;
   129                           ;18f4580.h: 30: };
   130                           ;18f4580.h: 31: } __STKPTRbits_t;
   131                           ;18f4580.h: 32: extern volatile __STKPTRbits_t S
                                 TKPTRbits @ 0xFFC;
   132                           ;18f4580.h: 33: typedef union {
   133                           ;18f4580.h: 34: struct {
   134                           ;18f4580.h: 35: unsigned volatile RBIF:1;
   135                           ;18f4580.h: 36: unsigned volatile INT0IF:1;
   136                           ;18f4580.h: 37: unsigned volatile TMR0IF:1;
   137                           	
   138  007F24                     _main:		; BSR set to: ?
   139                           
   140                           	opt stack 31
   141                           	line	5
   142                           ;pic3.c: 5: TRISD=0x00;
   143  007F24  0E00               	movlw	low(0)
   144  007F26  6E95               	movwf	((c:3989)),c	;volatile
   145                           	line	6
   146                           ;pic3.c: 6: while(1)
   147                           	
   148  007F28                     l676:		; BSR set to: ?
   149                           
   150                           	line	8
   151                           ;pic3.c: 7: {
   152                           ;pic3.c: 8: LATD=0x80;
   153  007F28  0E80               	movlw	low(080h)
   154  007F2A  6E8C               	movwf	((c:3980)),c	;volatile
   155                           	line	9
   156                           ;pic3.c: 9: delay();
   157  007F2C  ECB7  F03F         	call	_delay	;wreg free
   158                           	line	10
   159                           ;pic3.c: 10: LATD=0X40;
   160  007F30  0E40               	movlw	low(040h)
   161  007F32  6E8C               	movwf	((c:3980)),c	;volatile
   162                           	line	11
   163                           ;pic3.c: 11: delay();
   164  007F34  ECB7  F03F         	call	_delay	;wreg free
   165                           	line	12
   166                           ;pic3.c: 12: LATD=0x20;
   167  007F38  0E20               	movlw	low(020h)
   168  007F3A  6E8C               	movwf	((c:3980)),c	;volatile
   169                           	line	13
   170                           ;pic3.c: 13: delay();
   171  007F3C  ECB7  F03F         	call	_delay	;wreg free
   172                           	line	14
   173                           ;pic3.c: 14: LATD=0X10;
   174  007F40  0E10               	movlw	low(010h)
   175  007F42  6E8C               	movwf	((c:3980)),c	;volatile
   176                           	line	15
   177                           ;pic3.c: 15: delay();
   178  007F44  ECB7  F03F         	call	_delay	;wreg free
   179                           	line	16
   180                           ;pic3.c: 16: LATD=0x08;
   181  007F48  0E08               	movlw	low(08h)
   182  007F4A  6E8C               	movwf	((c:3980)),c	;volatile
   183                           	line	17
   184                           ;pic3.c: 17: delay();
   185  007F4C  ECB7  F03F         	call	_delay	;wreg free
   186                           	line	18
   187                           ;pic3.c: 18: LATD=0X04;
   188  007F50  0E04               	movlw	low(04h)
   189  007F52  6E8C               	movwf	((c:3980)),c	;volatile
   190                           	line	19
   191                           ;pic3.c: 19: delay();
   192  007F54  ECB7  F03F         	call	_delay	;wreg free
   193                           	line	20
   194                           ;pic3.c: 20: LATD=0x02;
   195  007F58  0E02               	movlw	low(02h)
   196  007F5A  6E8C               	movwf	((c:3980)),c	;volatile
   197                           	line	21
   198                           ;pic3.c: 21: delay();
   199  007F5C  ECB7  F03F         	call	_delay	;wreg free
   200                           	line	22
   201                           ;pic3.c: 22: LATD=0X01;
   202  007F60  0E01               	movlw	low(01h)
   203  007F62  6E8C               	movwf	((c:3980)),c	;volatile
   204                           	line	23
   205                           ;pic3.c: 23: delay();
   206  007F64  ECB7  F03F         	call	_delay	;wreg free
   207                           	line	24
   208                           	
   209  007F68                     l675:		; BSR set to: ?
   210                           
   211                           	line	6
   212  007F68  D7DF               	goto	l676
   213                           	global	start
   214  007F6A  EF00  F000         	goto	start
   215                           	opt stack 0
   216                           GLOBAL __end_of_main
   217  007F6E                     	__end_of_main:
   218                           	FNSIZE	_main,0,0
   219                           ; =============== function _main ends ==========
                                 ==
   220                           
   221                                   psect   text1,class=CODE,space=0,reloc=2
   222                           	line	25
   223                           
   224                           	opt lm
   225                           	signat	_main,88
   226                           	global	_delay
   227                           	global	??_delay
   228                           	global	?_delay
   229                           	file	"C:\Users\rohit\Documents\pic program\pic3
                                 .c"
   230                           	line	27
   231  000000                     	__size_of_delay	equ	__end_of_delay-_delay
   232                           ;pic3.c: 26: void delay()
   233                           ;pic3.c: 27: {
   234                           	
   235  007F6E                     _delay:		; BSR set to: ?
   236                           
   237                           	opt stack 30
   238                           	line	29
   239  007F6E  0E00               	movlw	low(0)
   240  007F70  0100               	movlb	0	; () banked
   241  007F72  0100               	movlb	0	; () banked
   242  007F74  6FFC               	movwf	((delay@i))&0ffh
   243  007F76  0E00               	movlw	high(0)
   244  007F78  0100               	movlb	0	; () banked
   245  007F7A  6FFD               	movwf	((delay@i+1))&0ffh
   246  007F7C  0100               	movlb	0	; () banked
   247  007F7E  0100               	movlb	0	; () banked
   248  007F80  51FD               	movf	((delay@i+1))&0ffh,w
   249  007F82  0A80               	xorlw	80h
   250  007F84  0F7F               	addlw	-((01h)^80h)
   251  007F86  0EF4               	movlw	0F4h
   252  007F88  B4D8               	btfsc	status,2
   253  007F8A  5DFC               	subwf	((delay@i))&0ffh,w
   254  007F8C  A0D8               	btfss	status,0
   255  007F8E  D001               	goto	u51
   256  007F90  D001               	goto	u50
   257  007F92                     u51:
   258  007F92  D001               	goto	l679
   259  007F94                     u50:
   260  007F94  D034               	goto	l680
   261                           	line	30
   262                           	
   263  007F96                     l679:		; BSR set to: ?
   264                           
   265                           ;pic3.c: 30: for(j=0;j<500;j++);
   266  007F96  0E00               	movlw	low(0)
   267  007F98  0100               	movlb	0	; () banked
   268  007F9A  0100               	movlb	0	; () banked
   269  007F9C  6FFE               	movwf	((delay@j))&0ffh
   270  007F9E  0E00               	movlw	high(0)
   271  007FA0  0100               	movlb	0	; () banked
   272  007FA2  6FFF               	movwf	((delay@j+1))&0ffh
   273  007FA4  0100               	movlb	0	; () banked
   274  007FA6  0100               	movlb	0	; () banked
   275  007FA8  51FF               	movf	((delay@j+1))&0ffh,w
   276  007FAA  0A80               	xorlw	80h
   277  007FAC  0F7F               	addlw	-((01h)^80h)
   278  007FAE  0EF4               	movlw	0F4h
   279  007FB0  B4D8               	btfsc	status,2
   280  007FB2  5DFE               	subwf	((delay@j))&0ffh,w
   281  007FB4  A0D8               	btfss	status,0
   282  007FB6  D001               	goto	u61
   283  007FB8  D001               	goto	u60
   284  007FBA                     u61:
   285  007FBA  D001               	goto	l682
   286  007FBC                     u60:
   287  007FBC  D010               	goto	l683
   288                           	
   289  007FBE                     l682:		; BSR set to: ?
   290                           
   291  007FBE  0100               	movlb	0	; () banked
   292  007FC0  0100               	movlb	0	; () banked
   293  007FC2  4BFE               	infsnz	((delay@j))&0ffh
   294  007FC4  2BFF               	incf	((delay@j+1))&0ffh
   295  007FC6  0100               	movlb	0	; () banked
   296  007FC8  0100               	movlb	0	; () banked
   297  007FCA  51FF               	movf	((delay@j+1))&0ffh,w
   298  007FCC  0A80               	xorlw	80h
   299  007FCE  0F7F               	addlw	-((01h)^80h)
   300  007FD0  0EF4               	movlw	0F4h
   301  007FD2  B4D8               	btfsc	status,2
   302  007FD4  5DFE               	subwf	((delay@j))&0ffh,w
   303  007FD6  A0D8               	btfss	status,0
   304  007FD8  D001               	goto	u71
   305  007FDA  D001               	goto	u70
   306  007FDC                     u71:
   307  007FDC  D7F0               	goto	l682
   308  007FDE                     u70:
   309                           	
   310  007FDE                     l683:		; BSR set to: ?
   311                           
   312                           	line	29
   313  007FDE  0100               	movlb	0	; () banked
   314  007FE0  0100               	movlb	0	; () banked
   315  007FE2  4BFC               	infsnz	((delay@i))&0ffh
   316  007FE4  2BFD               	incf	((delay@i+1))&0ffh
   317  007FE6  0100               	movlb	0	; () banked
   318  007FE8  0100               	movlb	0	; () banked
   319  007FEA  51FD               	movf	((delay@i+1))&0ffh,w
   320  007FEC  0A80               	xorlw	80h
   321  007FEE  0F7F               	addlw	-((01h)^80h)
   322  007FF0  0EF4               	movlw	0F4h
   323  007FF2  B4D8               	btfsc	status,2
   324  007FF4  5DFC               	subwf	((delay@i))&0ffh,w
   325  007FF6  A0D8               	btfss	status,0
   326  007FF8  D001               	goto	u81
   327  007FFA  D001               	goto	u80
   328  007FFC                     u81:
   329  007FFC  D7CC               	goto	l679
   330  007FFE                     u80:
   331                           	
   332  007FFE                     l680:		; BSR set to: ?
   333                           
   334                           	line	31
   335                           ;pic3.c: 31: }
   336  007FFE                     l678:
   337                           			; BSR set to: ?
   338                           
   339  007FFE  0012               	return
   340                           	opt stack 0
   341                           GLOBAL __end_of_delay
   342  008000                     	__end_of_delay:
   343                           	FNSIZE	_delay,4,0
   344                           ; =============== function _delay ends =========
                                 ===
   345                           
   346                           	signat	_delay,88
   347                           	FNCALL	_main,_delay
   348                           	FNROOT	_main
   349                                   psect   const,class=CODE,space=0,reloc=2
   350                           	global	_LATD
   351  000000                     _LATD	equ	0xF8C
   352                           	global	_TRISD
   353  000000                     _TRISD	equ	0xF95
   354                           	psect	intsave_regs,class=BIGRAM,space=1
   355                           	PSECT	param0,class=BANK0,space=1
   356                           	GLOBAL	__Lparam0
   357                           	FNCONF	param0,??,?
   358                           GLOBAL	__Lparam, __Hparam
   359                           GLOBAL	__Lparam0, __Hparam0
   360  000000                     __Lparam	EQU	__Lparam0
   361  000000                     __Hparam	EQU	__Hparam0


HI-TECH Software PICC-18 Macro Assembler V9.63PL3 build 4692 
Symbol Table                                           Sat Oct 17 20:41:06 2020

            u50 7F94              u51 7F92              u60 7FBC  
            u61 7FBA              u70 7FDE              u71 7FDC  
            u80 7FFE              u81 7FFC             l680 7FFE  
           l682 7FBE             l683 7FDE             l675 7F68  
           l676 7F28             l678 7FFE             l679 7F96  
          _LATD 000F8C            _main 7F24            start 0000  
         ?_main 00FC           _TRISD 000F95           _delay 7F6E  
         status 000FD8    __end_of_main 7F6E          ??_main 00FC  
 __activetblptr 000000          ?_delay 00FC          __Ldata 000000  
        delay@i 00FC          delay@j 00FE    __mediumconst 0600  
    __accesstop 0060   __end_of_delay 8000         ??_delay 00FC  
       __Hparam 0100         __Lparam 00FC         __ramtop 0600  
 __Lmediumconst 0600     __smallconst 0600        __Hparam0 0100  
      __Lparam0 00FC    __Lsmallconst 0600  
