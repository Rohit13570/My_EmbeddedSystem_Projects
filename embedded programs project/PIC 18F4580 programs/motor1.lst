

HI-TECH Software LITE Macro Assembler (PIC18) V9.63PL3 build 4692 
                                                       Mon Oct 19 19:01:28 2020

HI-TECH Software Omniscient Code Generator build 4692
     1  000000                     opt subtitle "HI-TECH Software Omniscient Code G
                                 enerator build 4692"
     2                           
     3                           	processor	18F4580
     4  000000                     porta	equ	0F80h
     5  000000                     portb	equ	0F81h
     6  000000                     portc	equ	0F82h
     7  000000                     portd	equ	0F83h
     8  000000                     porte	equ	0F84h
     9  000000                     lata	equ	0F89h
    10  000000                     latb	equ	0F8Ah
    11  000000                     latc	equ	0F8Bh
    12  000000                     latd	equ	0F8Ch
    13  000000                     late	equ	0F8Dh
    14  000000                     trisa	equ	0F92h
    15  000000                     trisb	equ	0F93h
    16  000000                     trisc	equ	0F94h
    17  000000                     trisd	equ	0F95h
    18  000000                     trise	equ	0F96h
    19  000000                     pie1	equ	0F9Dh
    20  000000                     pir1	equ	0F9Eh
    21  000000                     ipr1	equ	0F9Fh
    22  000000                     pie2	equ	0FA0h
    23  000000                     pir2	equ	0FA1h
    24  000000                     ipr2	equ	0FA2h
    25  000000                     t3con	equ	0FB1h
    26  000000                     tmr3l	equ	0FB2h
    27  000000                     tmr3h	equ	0FB3h
    28  000000                     ccp1con	equ	0FBDh
    29  000000                     ccpr1l	equ	0FBEh
    30  000000                     ccpr1h	equ	0FBFh
    31  000000                     adcon1	equ	0FC1h
    32  000000                     adcon0	equ	0FC2h
    33  000000                     adresl	equ	0FC3h
    34  000000                     adresh	equ	0FC4h
    35  000000                     sspcon2	equ	0FC5h
    36  000000                     sspcon1	equ	0FC6h
    37  000000                     sspstat	equ	0FC7h
    38  000000                     sspadd	equ	0FC8h
    39  000000                     sspbuf	equ	0FC9h
    40  000000                     t2con	equ	0FCAh
    41  000000                     pr2	equ	0FCBh
    42  000000                     tmr2	equ	0FCCh
    43  000000                     t1con	equ	0FCDh
    44  000000                     tmr1l	equ	0FCEh
    45  000000                     tmr1h	equ	0FCFh
    46  000000                     rcon	equ	0FD0h
    47  000000                     wdtcon	equ	0FD1h
    48  000000                     lvdcon	equ	0FD2h
    49  000000                     osccon	equ	0FD3h
    50  000000                     t0con	equ	0FD5h
    51  000000                     tmr0l	equ	0FD6h
    52  000000                     tmr0h	equ	0FD7h
    53  000000                     status	equ	0FD8h
    54  000000                     fsr2	equ	0FD9h
    55  000000                     fsr2l	equ	0FD9h
    56  000000                     fsr2h	equ	0FDAh
    57  000000                     plusw2	equ	0FDBh
    58  000000                     preinc2	equ	0FDCh
    59  000000                     postdec2	equ	0FDDh
    60  000000                     postinc2	equ	0FDEh
    61  000000                     indf2	equ	0FDFh
    62  000000                     bsr	equ	0FE0h
    63  000000                     fsr1	equ	0FE1h
    64  000000                     fsr1l	equ	0FE1h
    65  000000                     fsr1h	equ	0FE2h
    66  000000                     plusw1	equ	0FE3h
    67  000000                     preinc1	equ	0FE4h
    68  000000                     postdec1	equ	0FE5h
    69  000000                     postinc1	equ	0FE6h
    70  000000                     indf1	equ	0FE7h
    71  000000                     wreg	equ	0FE8h
    72  000000                     fsr0	equ	0FE9h
    73  000000                     fsr0l	equ	0FE9h
    74  000000                     fsr0h	equ	0FEAh
    75  000000                     plusw0	equ	0FEBh
    76  000000                     preinc0	equ	0FECh
    77  000000                     postdec0	equ	0FEDh
    78  000000                     postinc0	equ	0FEEh
    79  000000                     indf0	equ	0FEFh
    80  000000                     intcon3	equ	0FF0h
    81  000000                     intcon2	equ	0FF1h
    82  000000                     intcon	equ	0FF2h
    83  000000                     prod	equ	0FF3h
    84  000000                     prodl	equ	0FF3h
    85  000000                     prodh	equ	0FF4h
    86  000000                     tablat	equ	0FF5h
    87  000000                     tblptr	equ	0FF6h
    88  000000                     tblptrl	equ	0FF6h
    89  000000                     tblptrh	equ	0FF7h
    90  000000                     tblptru	equ	0FF8h
    91  000000                     pcl	equ	0FF9h
    92  000000                     pclat	equ	0FFAh
    93  000000                     pclath	equ	0FFAh
    94  000000                     pclatu	equ	0FFBh
    95  000000                     stkptr	equ	0FFCh
    96  000000                     tosl	equ	0FFDh
    97  000000                     tosh	equ	0FFEh
    98  000000                     tosu	equ	0FFFh
    99                           	global	__ramtop
   100                           	global	__accesstop
   101                           	GLOBAL	__activetblptr
   102  000000                     __activetblptr	EQU	0
   103                           	GLOBAL	__smallconst,__Lsmallconst
   104  000000                     __smallconst	EQU	__Lsmallconst
   105                           	GLOBAL	__mediumconst,__Lmediumconst
   106  000000                     __mediumconst	EQU	__Lmediumconst
   107                           	GLOBAL	__Ldata
   108  000000                     __Ldata	EQU	0
   109+ 000000                     delay@i	equ	??_delay+0
   110+                          	global	delay@i
   111+ 000000                     delay@j	equ	??_delay+2
   112                           	global	delay@j
   113                           ;Data sizes: Strings 0, constant 0, data 0, bss 
                                 0, persistent 0 stack 4
   114                           	global	_main
   115                           	global	??_main
   116                           	global	?_main
   117                                   psect   text0,class=CODE,space=0,reloc=2
   118                           
   119                           	opt lm
   120                           	file	"C:\Users\rohit\Documents\pic program\moto
                                 r1.c"
   121                           	line	4
   122  000000                     	__size_of_main	equ	__end_of_main-_main
   123                           ;motor1.c: 3: void main()
   124                           ;motor1.c: 4: {
   125                           	
   126  007F2C                     _main:		; BSR set to: ?
   127                           
   128                           	opt stack 31
   129                           	line	5
   130                           ;motor1.c: 5: TRISC=0X00;
   131  007F2C  0E00               	movlw	low(0)
   132  007F2E  6E94               	movwf	((c:3988)),c	;volatile
   133                           	line	6
   134                           ;motor1.c: 6: TRISD=0X01;
   135  007F30  0E01               	movlw	low(01h)
   136  007F32  6E95               	movwf	((c:3989)),c	;volatile
   137                           	line	7
   138                           ;motor1.c: 7: while(1)
   139                           	
   140  007F34                     l676:		; BSR set to: ?
   141                           
   142                           	line	9
   143                           ;motor1.c: 8: {
   144                           ;motor1.c: 9: if(RD0==0)
   145  007F34  B083               	btfsc	c:(31768/8),(31768)&7	;volatile
   146  007F36  D001               	goto	u81
   147  007F38  D001               	goto	u80
   148  007F3A                     u81:
   149  007F3A  D005               	goto	l678
   150  007F3C                     u80:
   151                           	line	11
   152                           ;motor1.c: 10: {
   153                           ;motor1.c: 11: LATC=0X1D;
   154  007F3C  0E1D               	movlw	low(01Dh)
   155  007F3E  6E8B               	movwf	((c:3979)),c	;volatile
   156                           	line	12
   157                           ;motor1.c: 12: delay();
   158  007F40  ECB7  F03F         	call	_delay	;wreg free
   159                           	line	14
   160                           ;motor1.c: 14: }
   161  007F44  D011               	goto	l675
   162                           	line	15
   163                           	
   164  007F46                     l678:		; BSR set to: ?
   165                           
   166                           ;motor1.c: 15: else if(RD1==0)
   167  007F46  B283               	btfsc	c:(31769/8),(31769)&7	;volatile
   168  007F48  D001               	goto	u91
   169  007F4A  D001               	goto	u90
   170  007F4C                     u91:
   171  007F4C  D005               	goto	l680
   172  007F4E                     u90:
   173                           	line	17
   174                           ;motor1.c: 16: {
   175                           ;motor1.c: 17: LATC=0X2E;
   176  007F4E  0E2E               	movlw	low(02Eh)
   177  007F50  6E8B               	movwf	((c:3979)),c	;volatile
   178                           	line	18
   179                           ;motor1.c: 18: delay();
   180  007F52  ECB7  F03F         	call	_delay	;wreg free
   181                           	line	20
   182                           ;motor1.c: 20: }
   183  007F56  D008               	goto	l675
   184                           	line	21
   185                           	
   186  007F58                     l680:		; BSR set to: ?
   187                           
   188                           ;motor1.c: 21: else if(RD2==0)
   189  007F58  B483               	btfsc	c:(31770/8),(31770)&7	;volatile
   190  007F5A  D001               	goto	u101
   191  007F5C  D001               	goto	u100
   192  007F5E                     u101:
   193  007F5E  D004               	goto	l675
   194  007F60                     u100:
   195                           	line	23
   196                           ;motor1.c: 22: {
   197                           ;motor1.c: 23: LATC=0X00;
   198  007F60  0E00               	movlw	low(0)
   199  007F62  6E8B               	movwf	((c:3979)),c	;volatile
   200                           	line	24
   201                           ;motor1.c: 24: delay();
   202  007F64  ECB7  F03F         	call	_delay	;wreg free
   203                           	line	25
   204                           	
   205  007F68                     l682:		; BSR set to: ?
   206                           
   207                           	line	26
   208                           	
   209  007F68                     l681:		; BSR set to: ?
   210                           
   211                           	
   212  007F68                     l679:		; BSR set to: ?
   213                           
   214                           	
   215  007F68                     l675:		; BSR set to: ?
   216                           
   217                           	line	7
   218  007F68  D7E5               	goto	l676
   219                           	global	start
   220  007F6A  EF00  F000         	goto	start
   221                           	opt stack 0
   222                           GLOBAL __end_of_main
   223  007F6E                     	__end_of_main:
   224                           	FNSIZE	_main,0,0
   225                           ; =============== function _main ends ==========
                                 ==
   226                           
   227                                   psect   text1,class=CODE,space=0,reloc=2
   228                           	line	27
   229                           
   230                           	opt lm
   231                           	signat	_main,88
   232                           	global	_delay
   233                           	global	??_delay
   234                           	global	?_delay
   235                           	file	"C:\Users\rohit\Documents\pic program\moto
                                 r1.c"
   236                           	line	29
   237  000000                     	__size_of_delay	equ	__end_of_delay-_delay
   238                           ;motor1.c: 28: void delay()
   239                           ;motor1.c: 29: {
   240                           	
   241  007F6E                     _delay:		; BSR set to: ?
   242                           
   243                           	opt stack 30
   244                           	line	31
   245  007F6E  0E00               	movlw	low(0)
   246  007F70  0100               	movlb	0	; () banked
   247  007F72  0100               	movlb	0	; () banked
   248  007F74  6FFC               	movwf	((delay@i))&0ffh
   249  007F76  0E00               	movlw	high(0)
   250  007F78  0100               	movlb	0	; () banked
   251  007F7A  6FFD               	movwf	((delay@i+1))&0ffh
   252  007F7C  0100               	movlb	0	; () banked
   253  007F7E  0100               	movlb	0	; () banked
   254  007F80  51FD               	movf	((delay@i+1))&0ffh,w
   255  007F82  0A80               	xorlw	80h
   256  007F84  0F7F               	addlw	-((01h)^80h)
   257  007F86  0EF5               	movlw	0F5h
   258  007F88  B4D8               	btfsc	status,2
   259  007F8A  5DFC               	subwf	((delay@i))&0ffh,w
   260  007F8C  A0D8               	btfss	status,0
   261  007F8E  D001               	goto	u111
   262  007F90  D001               	goto	u110
   263  007F92                     u111:
   264  007F92  D001               	goto	l684
   265  007F94                     u110:
   266  007F94  D034               	goto	l685
   267                           	line	32
   268                           	
   269  007F96                     l684:		; BSR set to: ?
   270                           
   271                           ;motor1.c: 32: for(j=0;j<=500;j++);
   272  007F96  0E00               	movlw	low(0)
   273  007F98  0100               	movlb	0	; () banked
   274  007F9A  0100               	movlb	0	; () banked
   275  007F9C  6FFE               	movwf	((delay@j))&0ffh
   276  007F9E  0E00               	movlw	high(0)
   277  007FA0  0100               	movlb	0	; () banked
   278  007FA2  6FFF               	movwf	((delay@j+1))&0ffh
   279  007FA4  0100               	movlb	0	; () banked
   280  007FA6  0100               	movlb	0	; () banked
   281  007FA8  51FF               	movf	((delay@j+1))&0ffh,w
   282  007FAA  0A80               	xorlw	80h
   283  007FAC  0F7F               	addlw	-((01h)^80h)
   284  007FAE  0EF5               	movlw	0F5h
   285  007FB0  B4D8               	btfsc	status,2
   286  007FB2  5DFE               	subwf	((delay@j))&0ffh,w
   287  007FB4  A0D8               	btfss	status,0
   288  007FB6  D001               	goto	u121
   289  007FB8  D001               	goto	u120
   290  007FBA                     u121:
   291  007FBA  D001               	goto	l687
   292  007FBC                     u120:
   293  007FBC  D010               	goto	l688
   294                           	
   295  007FBE                     l687:		; BSR set to: ?
   296                           
   297  007FBE  0100               	movlb	0	; () banked
   298  007FC0  0100               	movlb	0	; () banked
   299  007FC2  4BFE               	infsnz	((delay@j))&0ffh
   300  007FC4  2BFF               	incf	((delay@j+1))&0ffh
   301  007FC6  0100               	movlb	0	; () banked
   302  007FC8  0100               	movlb	0	; () banked
   303  007FCA  51FF               	movf	((delay@j+1))&0ffh,w
   304  007FCC  0A80               	xorlw	80h
   305  007FCE  0F7F               	addlw	-((01h)^80h)
   306  007FD0  0EF5               	movlw	0F5h
   307  007FD2  B4D8               	btfsc	status,2
   308  007FD4  5DFE               	subwf	((delay@j))&0ffh,w
   309  007FD6  A0D8               	btfss	status,0
   310  007FD8  D001               	goto	u131
   311  007FDA  D001               	goto	u130
   312  007FDC                     u131:
   313  007FDC  D7F0               	goto	l687
   314  007FDE                     u130:
   315                           	
   316  007FDE                     l688:		; BSR set to: ?
   317                           
   318                           	line	31
   319  007FDE  0100               	movlb	0	; () banked
   320  007FE0  0100               	movlb	0	; () banked
   321  007FE2  4BFC               	infsnz	((delay@i))&0ffh
   322  007FE4  2BFD               	incf	((delay@i+1))&0ffh
   323  007FE6  0100               	movlb	0	; () banked
   324  007FE8  0100               	movlb	0	; () banked
   325  007FEA  51FD               	movf	((delay@i+1))&0ffh,w
   326  007FEC  0A80               	xorlw	80h
   327  007FEE  0F7F               	addlw	-((01h)^80h)
   328  007FF0  0EF5               	movlw	0F5h
   329  007FF2  B4D8               	btfsc	status,2
   330  007FF4  5DFC               	subwf	((delay@i))&0ffh,w
   331  007FF6  A0D8               	btfss	status,0
   332  007FF8  D001               	goto	u141
   333  007FFA  D001               	goto	u140
   334  007FFC                     u141:
   335  007FFC  D7CC               	goto	l684
   336  007FFE                     u140:
   337                           	
   338  007FFE                     l685:		; BSR set to: ?
   339                           
   340                           	line	33
   341                           ;motor1.c: 33: }
   342  007FFE                     l683:
   343                           			; BSR set to: ?
   344                           
   345  007FFE  0012               	return
   346                           	opt stack 0
   347                           GLOBAL __end_of_delay
   348  008000                     	__end_of_delay:
   349                           	FNSIZE	_delay,4,0
   350                           ; =============== function _delay ends =========
                                 ===
   351                           
   352                           	signat	_delay,88
   353                           	FNCALL	_main,_delay
   354                           	FNROOT	_main
   355                                   psect   const,class=CODE,space=0,reloc=2
   356                           	global	_LATC
   357  000000                     _LATC	equ	0xF8B
   358                           	global	_TRISC
   359  000000                     _TRISC	equ	0xF94
   360                           	global	_TRISD
   361  000000                     _TRISD	equ	0xF95
   362                           	global	_RD0
   363  000000                     _RD0	equ	0x7C18
   364                           	global	_RD1
   365  000000                     _RD1	equ	0x7C19
   366                           	global	_RD2
   367  000000                     _RD2	equ	0x7C1A
   368                           	psect	intsave_regs,class=BIGRAM,space=1
   369                           	PSECT	param0,class=BANK0,space=1
   370                           	GLOBAL	__Lparam0
   371                           	FNCONF	param0,??,?
   372                           GLOBAL	__Lparam, __Hparam
   373                           GLOBAL	__Lparam0, __Hparam0
   374  000000                     __Lparam	EQU	__Lparam0
   375  000000                     __Hparam	EQU	__Hparam0


HI-TECH Software PICC-18 Macro Assembler V9.63PL3 build 4692 
Symbol Table                                           Mon Oct 19 19:01:28 2020

            u80 7F3C              u81 7F3A              u90 7F4E  
            u91 7F4C             l680 7F58             l681 7F68  
           l682 7F68             l683 7FFE             l675 7F68  
           l684 7F96             l676 7F34             l685 7FFE  
           l678 7F46             l687 7FBE             l679 7F68  
           l688 7FDE             _RD0 007C18             _RD1 007C19  
           _RD2 007C1A             u100 7F60             u101 7F5E  
           u110 7F94             u111 7F92             u120 7FBC  
           u121 7FBA             u130 7FDE             u131 7FDC  
           u140 7FFE             u141 7FFC            _LATC 000F8B  
          _main 7F2C            start 0000           ?_main 00FC  
         _TRISC 000F94           _TRISD 000F95           _delay 7F6E  
         status 000FD8    __end_of_main 7F6E          ??_main 00FC  
 __activetblptr 000000          ?_delay 00FC          __Ldata 000000  
        delay@i 00FC          delay@j 00FE    __mediumconst 0600  
    __accesstop 0060   __end_of_delay 8000         ??_delay 00FC  
       __Hparam 0100         __Lparam 00FC         __ramtop 0600  
 __Lmediumconst 0600     __smallconst 0600        __Hparam0 0100  
      __Lparam0 00FC    __Lsmallconst 0600  
